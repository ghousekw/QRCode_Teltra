// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Change to "mysql" if using PlanetScale
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Catalogue {
  id          String   @id @default(cuid())
  title       String
  description String
  qrCodeUrl   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  products    Product[]
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  image       String?
  fileUrl     String?
  order       Int      @default(0)
  catalogueId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  catalogue   Catalogue @relation(fields: [catalogueId], references: [id], onDelete: Cascade)
}

model VCard {
  id          String   @id @default(cuid())
  firstName   String
  lastName    String
  arabicFirstName String?
  arabicLastName  String?
  title       String?
  company     String?
  email       String?
  phone       String?
  website     String?
  address     String?
  city        String?
  state       String?
  country     String?
  zipCode     String?
  notes       String?
  qrCodeUrl   String?
  logoUrl     String?
  instagram   String?
  facebook    String?
  twitter     String?
  linkedin    String?
  youtube     String?
  tiktok      String?
  snapchat    String?
  telegram    String?
  whatsapp    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  phoneNumbers PhoneNumber[]
}

model PhoneNumber {
  id        String   @id @default(cuid())
  number    String
  country   String?
  type      String?  // office, mobile, fax, etc.
  vcardId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  vcard     VCard    @relation(fields: [vcardId], references: [id], onDelete: Cascade)
}